#!/usr/bin/env perl

use strict;
use warnings;
use URI;
use Web::Scraper;
use Data::Dumper;
use JavaScript::V8;
use HTML::Entities;
use LWP::Simple;
use File::Path;
use File::Basename;

my $url = shift or die "Please paste url of values.com video you'd like to download";

my $playlist;

my $js = scraper {
  process_first 'title', "title" => 'TEXT';
  process 'script[type="text/javascript"]', "js[]" => 'HTML';
};

my $res = $js->scrape(URI->new($url));
my @found = grep { /jwplayer/m } @{$res->{"js"}};
my $jwplayer = decode_entities($found[0]);

my $title = $res->{"title"};

my $jscode =<< 'JSCODE' . $jwplayer;
  function jwplayer(x) {
    return {
      setup: function(arg) {
        retrieve(arg["playlist"]);
      }
    };
  }
JSCODE

my $context = JavaScript::V8::Context->new();
$context->bind_function(retrieve => sub { $playlist = $_[0] });
$context->eval($jscode);

foreach my $pl (@$playlist) {
  my $u1 = URI->new($pl->{"file"});
  my ($ext) = $u1->path =~ /\.(\w+)$/;
  print "Downloading ${\basename($u1->path)} to $title.$ext ..\n";
  mirror($pl->{"file"}, "$title.$ext");
  
  my @eng_subs = grep { $_->{"label"} =~ /english/i and $_->{"kind"} =~ /caption/i } @{$pl->{"tracks"}};
  if (scalar @eng_subs) {
    my $u2 = URI->new($eng_subs[0]->{"file"});
    my ($srt) = $u2->path =~ /\.(\w+)$/;
    print "Downloading ${\basename($u2->path)} to $title.$srt ..\n";
    mirror($eng_subs[0]->{"file"}, "$title.$srt");
  }
}
